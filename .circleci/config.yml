version: 2.1
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
           requires:
            - build
      - deployToStage:
           requires:
            - test
      - hold:
           type: approval
      - deployToProd:
           requires:
            - test
            - hold

jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - run: ./gradlew bootJar
      - persist_to_workspace:
          root: ./
          paths:
            - build/
            - .gradle/
  test:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - run: ./gradlew test
      - store_test_results:
          path: build/test-results/

  deployToStage:
    docker: # executor type
      - image: cimg/base:stable # primary container will run the latest, production-ready base
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - attach_workspace:
          at: ./
      - run: docker build --iidfile image.txt -f Dockerfile . -t teamd

      - run:
          name: Build and push Docker image to Heroku
          command: |
            set -x
            sudo curl https://cli-assets.heroku.com/install.sh | sh
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:login
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:push -a biblioteca-stage web
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:release -a biblioteca-stage web

  deployToProd:
    docker: # executor type
      - image: cimg/base:stable # primary container will run the latest, production-ready base
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - attach_workspace:
          at: ./
      - run: docker build --iidfile image.txt -f Dockerfile . -t teamd

      - run:
          name: Build and push Docker image to Heroku Production
          command: |
            set -x
            sudo curl https://cli-assets.heroku.com/install.sh | sh
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:login
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:push -a biblioteca-production web
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:release -a biblioteca-production web

